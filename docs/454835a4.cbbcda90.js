(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{120:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return i})),a.d(t,"default",(function(){return b}));var r=a(3),o=a(7),n=(a(0),a(251)),c={id:"readme",hide_title:!0,title:"Readme",slug:"readme"},l={unversionedId:"readme",id:"readme",isDocsHomePage:!1,title:"Readme",description:"Plot",source:"@site/docs\\README.md",slug:"/readme",permalink:"/plot/docs/readme",editUrl:"https://github.com/data-forge-notebook/plot/docs/README.md",version:"current",sidebar:"someSidebar",next:{title:"Package index",permalink:"/plot/docs/"}},i=[{value:"Aims",id:"aims",children:[]},{value:"Usage",id:"usage",children:[{value:"Import plot",id:"import-plot",children:[]},{value:"Browser",id:"browser",children:[]},{value:"Node.js",id:"nodejs",children:[]},{value:"Data-Forge Notebook",id:"data-forge-notebook",children:[]}]},{value:"Pass in configuration options",id:"pass-in-configuration-options",children:[]},{value:"Multiple types of data",id:"multiple-types-of-data",children:[{value:"Plot an array of numbers",id:"plot-an-array-of-numbers",children:[]},{value:"Plot an array of JavaScirpt object",id:"plot-an-array-of-javascirpt-object",children:[]},{value:"Plot by column",id:"plot-by-column",children:[]}]},{value:"Resources",id:"resources",children:[]},{value:"Future",id:"future",children:[]},{value:"Support the developer",id:"support-the-developer",children:[]}],p={toc:i};function b(e){var t=e.components,a=Object(o.a)(e,["components"]);return Object(n.b)("wrapper",Object(r.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"plot"},"Plot"),Object(n.b)("p",null,"The simplest and most forgiving plotting API for JavaScript and TypeScript."),Object(n.b)("p",null,"Use plot to quickly and conveniently render charts for your data. It is an abstraction layer over JavaScript visualization libraries. Currently supporting ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://apexcharts.com/"}),"Apex Charts"),", but intending to support more in the future."),Object(n.b)("p",null,Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://data-forge-notebook.github.io/plot/docs"}),"Click here for the API docs")),Object(n.b)("p",null,Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/data-forge-notebook/plot-examples"}),"For various examples see this repo"),"."),Object(n.b)("p",null,"Plot can be used from Node.js, from the browser and is specially designed to integrate with ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.data-forge-notebook.com/"}),"Data-Forge Notebook"),"."),Object(n.b)("p",null,"I'm after contributors to help flesh this library out! Can you help? "),Object(n.b)("p",null,"Please give feedback!"),Object(n.b)("p",null,"Email the author on ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"mailto:ashley@codecapers.com.au"}),"ashley@codecapers.com.au"),"."),Object(n.b)("a",{target:"_blank",href:"http://www.codecapers.com.au/#support-my-work"},"Click here to ",Object(n.b)("b",null,"support the developer.")),Object(n.b)("h2",{id:"aims"},"Aims"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"To have a simple way to plot a chart."),Object(n.b)("li",{parentName:"ul"},"To be an abstraction over multiple code libraries for visualization in JavaScript."),Object(n.b)("li",{parentName:"ul"},"To have a plotting library that works well in Node.js, the browser and in ",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.data-forge-notebook.com/"}),"Data-Forge Notebook"),"."),Object(n.b)("li",{parentName:"ul"},"To be able to define charts purely as data using a simple JSON format."),Object(n.b)("li",{parentName:"ul"},"To be able to serialize a chart to send it over the wire or save it to disk."),Object(n.b)("li",{parentName:"ul"},"To be able to separate chart configuration and chart data to make it easy to reuse the charts you create.")),Object(n.b)("h2",{id:"usage"},"Usage"),Object(n.b)("p",null,"Some instructions for using plot. These instructions are for JavaScript, but this library also works in TypeScript."),Object(n.b)("h3",{id:"import-plot"},"Import plot"),Object(n.b)("h3",{id:"browser"},"Browser"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{}),"npm install --save plot @plotex/render-dom\n")),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'const { plot } = require("plot");\nrequire("@plotex/render-dom");\n\nconst data = [ /* your data */ ];\nconst parentEl = /* parent DOM to contain the chart */ ;\nconst chart = plot(data).renderDOM(parentEl);\n')),Object(n.b)("h3",{id:"nodejs"},"Node.js"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{}),"npm install --save plot @plotex/render-image\n")),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'const { plot } = require("plot");\nrequire("@plotex/render-image");\n\nconst data = [ /* your data */ ];\nplot(data).renderImage("my-chart.png");\n')),Object(n.b)("h3",{id:"data-forge-notebook"},"Data-Forge Notebook"),Object(n.b)("p",null,"plot is integrated into ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.data-forge-notebook.com/"}),"Data-Forge Notebook"),"."),Object(n.b)("p",null,"You can plot an array of JavaScript data like this:"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"const data = [ /* your data */ ];\ndisplay.plot(data);\n")),Object(n.b)("p",null,"See more Data-Forge Notebook examples in ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/data-forge-notebook/wiki/wiki/visualizing-data"}),"the exported example visualization notebook"),"."),Object(n.b)("h2",{id:"pass-in-configuration-options"},"Pass in configuration options"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'const data = [ /* your data */ ];\nconst chartConfig = { chartType: "bar" };\nconst axisConfig = { x: "Date", y: "Close" };\nplot(data, chartConfig, axisConfig)\n    .renderDOM(parentEl);\n')),Object(n.b)("h2",{id:"multiple-types-of-data"},"Multiple types of data"),Object(n.b)("h3",{id:"plot-an-array-of-numbers"},"Plot an array of numbers"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"plot([10, 15, 30])\n    .renderDOM(parentEl);\n")),Object(n.b)("h3",{id:"plot-an-array-of-javascirpt-object"},"Plot an array of JavaScirpt object"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"plot([ { A: 10, B: 52 }, { A: 15, B: 37 }, A: 30, B: 45 }])\n    .renderDOM(parentEl);\n")),Object(n.b)("h3",{id:"plot-by-column"},"Plot by column"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"plot({ A: [10, 15, 30], B: [52, 37, 45] })\n    .renderDOM(parentEl);\n")),Object(n.b)("h2",{id:"resources"},"Resources"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://data-forge-notebook.github.io/plot/docs/"}),"API docs")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/data-forge-notebook/plot-examples"}),"For TypeScript Node.js example see this repo"),".")),Object(n.b)("h2",{id:"future"},"Future"),Object(n.b)("p",null,"There's more work to be done!"),Object(n.b)("p",null,"Can you contribute, test or give feedback?"),Object(n.b)("p",null,"Email the developer on ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"mailto:ashley@codecapers.com.au"}),"ashley@codecapers.com.au"),"."),Object(n.b)("h2",{id:"support-the-developer"},"Support the developer"),Object(n.b)("a",{target:"_blank",href:"http://www.codecapers.com.au/#support-my-work"},"Click here to **support the developer.**"))}b.isMDXComponent=!0},251:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return m}));var r=a(0),o=a.n(r);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=o.a.createContext({}),b=function(e){var t=o.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=b(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=b(a),d=r,m=s["".concat(c,".").concat(d)]||s[d]||u[d]||n;return a?o.a.createElement(m,l(l({ref:t},p),{},{components:a})):o.a.createElement(m,l({ref:t},p))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,c=new Array(n);c[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var p=2;p<n;p++)c[p]=a[p];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);